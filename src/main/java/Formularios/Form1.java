 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.Archivo;
import Clases.Automata;
import Clases.Lexema;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;

/**
 *
 * @author emili
 */
public class Form1 extends javax.swing.JFrame {

    /*Instancio objeto para manejo de archivos*/
    Archivo archivo = new Archivo();
    /*Lista para los tokens generados para automatas*/
    private ArrayList tokens = new ArrayList();
    ImageIcon Boton1 = new ImageIcon("carpeta.png");
    ImageIcon Boton2 = new ImageIcon("jugar.png");
    ImageIcon Boton3 = new ImageIcon("Borrar.png");
    ImageIcon Boton4 = new ImageIcon("salvar.png");
    ImageIcon Fondo1 = new ImageIcon("Fondo1.jpg");
    ImageIcon Icono = new ImageIcon("Error.png");

    /**
     * Creates new form Form1
     */
    public Form1() {
        initComponents();
        this.setLocationRelativeTo(null);
        Trasparencia();
        Cargar.setIcon(new ImageIcon(Boton1.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
        Ejecutar.setIcon(new ImageIcon(Boton2.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
        Limpiar.setIcon(new ImageIcon(Boton3.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
        Guardar.setIcon(new ImageIcon(Boton4.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
        IconoError.setIcon(new ImageIcon(Icono.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)));
        Fondo.setIcon(new ImageIcon(Fondo1.getImage().getScaledInstance(1200, 690, Image.SCALE_SMOOTH)));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblLinea = new javax.swing.JLabel();
        lblColumna = new javax.swing.JLabel();
        Cargar = new javax.swing.JButton();
        Ejecutar = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        IconoError = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaErrores = new javax.swing.JTextArea();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLinea.setBackground(new java.awt.Color(255, 255, 255));
        lblLinea.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblLinea.setForeground(new java.awt.Color(255, 255, 255));
        lblLinea.setText("Linea");
        jPanel1.add(lblLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        lblColumna.setBackground(new java.awt.Color(255, 255, 255));
        lblColumna.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblColumna.setForeground(new java.awt.Color(255, 255, 255));
        lblColumna.setText("Columna");
        jPanel1.add(lblColumna, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });
        jPanel1.add(Cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 40));

        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(Ejecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, 40));

        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(Limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 80, 40));

        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        jPanel1.add(Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 80, 40));
        jPanel1.add(IconoError, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 50, 50));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Errores Lexicos:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 110, 20));

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 710, 290));

        areaErrores.setColumns(20);
        areaErrores.setRows(5);
        jScrollPane3.setViewportView(areaErrores);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 710, 300));
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 690));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        // TODO add your handling code here:
        if (archivo.getSeleccionar().showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo.setArchivo(archivo.getSeleccionar().getSelectedFile());
            if (archivo.getArchivo().canRead()) {
                if (archivo.getArchivo().getName().endsWith("txt")) {
                    String Documento = archivo.abrirArchivo(archivo.getArchivo());
                    areaTexto.setText(Documento);
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo no compatible" + JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_CargarActionPerformed

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
        // TODO add your handling code here:
        //Instancio objeto de la clase automata
        Automata analizador = new Automata();
        //Se envia el texto a analizar
        analizador.analizadorAutomata(areaTexto.getText());
        //Clono el arraylist generado
        tokens = (ArrayList) analizador.getListaLexema().clone();
        //Metodo para mostrar tokes
        mostrarTokens();
      

        //Verifica si existen errores
        if (verificarErrores()) {
            JOptionPane.showMessageDialog(null, "Compilacion Correcta");
        } else {
            JOptionPane.showMessageDialog(null, "Hay Errores Lexicos");
        }
    }//GEN-LAST:event_EjecutarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        archivo.guardarArchivo();
    }//GEN-LAST:event_GuardarActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
        areaTexto.setText(null);
        areaErrores.setText(null);
    }//GEN-LAST:event_LimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form1().setVisible(true);
            }
        });
    }

    public void Trasparencia() {
        Cargar.setOpaque(false);
        Cargar.setContentAreaFilled(false);
        Ejecutar.setOpaque(false);
        Ejecutar.setContentAreaFilled(false);
        Limpiar.setOpaque(false);
        Limpiar.setContentAreaFilled(false);
        Guardar.setOpaque(false);
        Guardar.setContentAreaFilled(false);
    }

    /*Regresa si encuentra errores*/
    public Boolean verificarErrores() {
        if (areaErrores.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    /*Obtiene la fila y columna actual*/
    public void getColumnaFila() throws BadLocationException {
        int index = 0;
        int line = 0;
        areaTexto.setSelectionStart(0);
        areaTexto.getLineOfOffset(index);

        int firstChar = areaTexto.getLineStartOffset(line);
        int column = index - firstChar;
        lblLinea.setText("Linea: "+(line+1));
        lblColumna.setText("Columna: "+column);
    }

    /* Muestra y pinta los tokens */
    public void mostrarTokens() {
        //Contador de errores
        int contErrores = 1;
        //Se limpia dos areas de texto
        areaTexto.setText(null);
        areaErrores.setText(null);

        //Analiza el arraylist y clasifica los tokens
        for (int i = 0; i < tokens.size(); i++) {
            Lexema lexema = (Lexema) tokens.get(i);
            //Si es entero lo pinta de morado
            if (lexema.getTipo().equals("Entero")) {
            
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());

            } //Si es decimal lo pinta de celeste
            else if (lexema.getTipo().equals("Decimal")) {
        
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es cadena lo pinta de gris
            else if (lexema.getTipo().equals("Cadena")) {
           
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es booleano lo pinta de naranja
            else if (lexema.getTipo().equals("Booleano")) {
            
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es caracter lo pinta de caracter
            else if (lexema.getTipo().equals("Caracter")) {
            
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es un operador lo pinta de azul
            else if (lexema.getTipo().equals("Operador")) {
               
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es una asignacion lo pinta de rosado
            else if (lexema.getTipo().equals("Asignacion")) {
          
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es un comentario lo pinta de roja
            else if (lexema.getTipo().equals("Comentario")) {
             
                areaTexto.append(lexema.getLexema()+" "+lexema.getTipo());
            } //Si es una palabra reservada lo pinta de verde
            else if (lexema.getTipo().equals("Error")) {
              
                areaTexto.append(lexema.getLexema());
                areaErrores.append(contErrores + ") " + lexema.getLexema()+" "+lexema.getTipo());
                contErrores++;
                areaErrores.append("\n");
            } //Inserta palabras reservadas
            else if (!lexema.getTipo().equals("Enter")) {
                //areaTexto.SelectionColor = Color.Black;
                areaTexto.append(lexema.getLexema());
            }

            //Inserta enters o espacios
            if (lexema.getTipo().equals("Enter")) {
                areaTexto.append("\n");
            } else {
                areaTexto.append(" ");
            }
           

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cargar;
    private javax.swing.JButton Ejecutar;
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton Guardar;
    private javax.swing.JLabel IconoError;
    private javax.swing.JButton Limpiar;
    private javax.swing.JTextArea areaErrores;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblColumna;
    private javax.swing.JLabel lblLinea;
    // End of variables declaration//GEN-END:variables
}
